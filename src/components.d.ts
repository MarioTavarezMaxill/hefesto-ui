/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AlertUi {
        "addRole": boolean;
        "colorScheme": | 'whiteAlpha'
		| 'blackAlpha'
		| 'gray'
		| 'red'
		| 'orange'
		| 'yellow'
		| 'green'
		| 'teal'
		| 'blue'
		| 'cyan'
		| 'purple'
		| 'pink';
        "fullWidth": boolean;
        "size": 'sm' | 'md' | 'lg';
        "status": 'info' | 'warning' | 'success' | 'error' | 'loading';
        "variant": 'subtle' | 'left-accent' | 'top-accent' | 'solid';
    }
    interface BadgeUi {
        "colorScheme": 'default' | 'dark' | 'red' | 'green' | 'yellow' | 'indigo' | 'purple' | 'pink';
        "size": 'xs' | 'sm' | 'md' | 'lg' | 'xl';
        "text": string;
        "variant": 'solid' | 'subtle' | 'outline';
    }
    interface DividerUi {
        "size": string;
        "variant": 'solid' | 'dashed';
    }
    interface IndicatorUi {
        "background": boolean;
        "color": 'blue' | 'green' | 'red' | 'yellow' | 'indigo' | 'purple' | 'pink';
        "text": string;
    }
    interface SkeletonUi {
        "cols": number;
        "height": number;
        "rows": number;
        "space": number;
    }
}
declare global {
    interface HTMLAlertUiElement extends Components.AlertUi, HTMLStencilElement {
    }
    var HTMLAlertUiElement: {
        prototype: HTMLAlertUiElement;
        new (): HTMLAlertUiElement;
    };
    interface HTMLBadgeUiElement extends Components.BadgeUi, HTMLStencilElement {
    }
    var HTMLBadgeUiElement: {
        prototype: HTMLBadgeUiElement;
        new (): HTMLBadgeUiElement;
    };
    interface HTMLDividerUiElement extends Components.DividerUi, HTMLStencilElement {
    }
    var HTMLDividerUiElement: {
        prototype: HTMLDividerUiElement;
        new (): HTMLDividerUiElement;
    };
    interface HTMLIndicatorUiElement extends Components.IndicatorUi, HTMLStencilElement {
    }
    var HTMLIndicatorUiElement: {
        prototype: HTMLIndicatorUiElement;
        new (): HTMLIndicatorUiElement;
    };
    interface HTMLSkeletonUiElement extends Components.SkeletonUi, HTMLStencilElement {
    }
    var HTMLSkeletonUiElement: {
        prototype: HTMLSkeletonUiElement;
        new (): HTMLSkeletonUiElement;
    };
    interface HTMLElementTagNameMap {
        "alert-ui": HTMLAlertUiElement;
        "badge-ui": HTMLBadgeUiElement;
        "divider-ui": HTMLDividerUiElement;
        "indicator-ui": HTMLIndicatorUiElement;
        "skeleton-ui": HTMLSkeletonUiElement;
    }
}
declare namespace LocalJSX {
    interface AlertUi {
        "addRole"?: boolean;
        "colorScheme"?: | 'whiteAlpha'
		| 'blackAlpha'
		| 'gray'
		| 'red'
		| 'orange'
		| 'yellow'
		| 'green'
		| 'teal'
		| 'blue'
		| 'cyan'
		| 'purple'
		| 'pink';
        "fullWidth"?: boolean;
        "size"?: 'sm' | 'md' | 'lg';
        "status"?: 'info' | 'warning' | 'success' | 'error' | 'loading';
        "variant"?: 'subtle' | 'left-accent' | 'top-accent' | 'solid';
    }
    interface BadgeUi {
        "colorScheme"?: 'default' | 'dark' | 'red' | 'green' | 'yellow' | 'indigo' | 'purple' | 'pink';
        "size"?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';
        "text"?: string;
        "variant"?: 'solid' | 'subtle' | 'outline';
    }
    interface DividerUi {
        "size"?: string;
        "variant"?: 'solid' | 'dashed';
    }
    interface IndicatorUi {
        "background"?: boolean;
        "color"?: 'blue' | 'green' | 'red' | 'yellow' | 'indigo' | 'purple' | 'pink';
        "text"?: string;
    }
    interface SkeletonUi {
        "cols"?: number;
        "height"?: number;
        "rows"?: number;
        "space"?: number;
    }
    interface IntrinsicElements {
        "alert-ui": AlertUi;
        "badge-ui": BadgeUi;
        "divider-ui": DividerUi;
        "indicator-ui": IndicatorUi;
        "skeleton-ui": SkeletonUi;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "alert-ui": LocalJSX.AlertUi & JSXBase.HTMLAttributes<HTMLAlertUiElement>;
            "badge-ui": LocalJSX.BadgeUi & JSXBase.HTMLAttributes<HTMLBadgeUiElement>;
            "divider-ui": LocalJSX.DividerUi & JSXBase.HTMLAttributes<HTMLDividerUiElement>;
            "indicator-ui": LocalJSX.IndicatorUi & JSXBase.HTMLAttributes<HTMLIndicatorUiElement>;
            "skeleton-ui": LocalJSX.SkeletonUi & JSXBase.HTMLAttributes<HTMLSkeletonUiElement>;
        }
    }
}
